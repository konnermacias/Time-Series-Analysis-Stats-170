y.window = window(plot.ts(y), start = c(1,1), end=c(1,400))
y.window = window(plot.ts(y), start = c(1,1), end=c(1,400))
y.window
y.window = window(plot.ts(y), start = c(1,1), end=c(1,400))
par(mfrow=c(1,1))
y.window = window(plot.ts(y), start = c(1,1), end=c(1,400))
y.window = window(plot.ts(y), start = c(1,1), end=c(1,200))
y.window = window(plot.ts(y), start = c(1,1), end=c(1,100))
y.window = window(plot.ts(y), start = c(1,1), end=c(100,1))
y = arima.sim(n = 10000, list(ma=-0.3)) # generate MA(1) data
y.ts = ts(y)
window(y.ts, start=c(1992,1), end = c(1996,1))
window(y.ts, start=c(1992,1), end = c(1996,1))
plot(window(y.ts, start=c(1992,1), end = c(1996,1)))
plot.ts(window(y.ts, start=c(1992,1), end = c(1996,1)))
plot.ts(window(y.ts, start=c(1977,1), end = c(1996,1)))
plot.ts(window(y.ts, start=c(1977,1), end = c(2000,1)))
plot.ts(window(y.ts, start=c(1977,1), end = c(20453,1)))
plot.ts(window(y.ts, start=c(1977,1), end = c(2044,1)))
plot.ts(window(y.ts, start=c(1977,1), end = c(20434,1)))
plot.ts(window(y.ts, start=c(1977,1), end = c(9999,1)))
plot.ts(window(y.ts, start=c(1977,1), end = c(990,1)))
plot.ts(window(y.ts, start=c(1977,1), end = c(1990,1)))
plot.ts(window(y.ts, start=c(1977,1), end = c(2070,1)))
plot.ts(window(y.ts, start=c(1977,1), end = c(2300,1)))
plot.ts(window(y.ts, start=c(1977,1), end = c(2500,1)))
plot.ts(window(y.ts, start=c(1977,1), end = c(2100,1)))
y = arima.sim(n = 10000, list(ma=-0.7))
y.ts = ts(y)
plot.ts(window(y.ts, start=c(1977,1), end = c(1990,1)))
plot.ts(window(y.ts, start=c(1977,1), end = c(2070,1)))
y = arima.sim(n = 10000, list(ma=-0.9))
y.ts = ts(y)
plot.ts(window(y.ts, start=c(1977,1), end = c(2070,1)))
y = arima.sim(n = 10000, list(ma=-0.3))
y.ts = ts(y)
plot.ts(window(y.ts, start=c(1977,1), end = c(2070,1)))
y = arima.sim(n = 10000, list(ma=-0.7))
y.ts = ts(y)
plot.ts(window(y.ts, start=c(1977,1), end = c(2070,1)))
y = arima.sim(n = 10000, list(ma=-0.9))
y.ts = ts(y)
plot.ts(window(y.ts, start=c(1977,1), end = c(2070,1)))
## g
par(mfrow = c(2,2))
acf(rm.decom.additive[7:162], main = "ACF for whole logged time series")
acf(complete.cases(rm.decom.additive), main = "ACF for whole logged time series")
complete.cases(rm.decom.additive)
rm.decom.additive
rm.decom.additive[:160]
rm.decom.additive[1:160]
rm.decom.additive[1:110]
rm.decom.additive[1:50]
rm.decom.additive[1:2]
rm.decom.additive[1:3]
rm.decom.additive[1:2]
rm.decom.additive[1:3]
rm.decom.additive[1:4]
rm.decom.additive
## a
par(mfrow=c(3,3)) # to put the next graphs
## b
y = arima.sim(n = 10000, list(ma=-0.3)) # generate MA(1) data
plot.ts(y, main = "MA(1), theta = -0.3") # time plot
acf(y, main = "MA(1), theta = -0.3") # correlogram
pacf(y, main = "MA(1), theta = -0.3") # partial correlogram
y = arima.sim(n = 10000, list(ma=-0.7)) # generate MA(1) data
plot.ts(y, main = "MA(1), theta = -0.7") # time plot
acf(y, main = "MA(1), theta = -0.7") # correlogram
pacf(y, main = "MA(1), theta = -0.7") # partial correlogram
y = arima.sim(n = 10000, list(ma=-0.9)) # generate MA(1) data
plot.ts(y, main = "MA(1), theta = -0.9") # time plot
acf(y, main = "MA(1), theta = -0.9") # correlogram
pacf(y, main = "MA(1), theta = -0.9") # partial correlogram
## g
acf(y)$acf[2] # numerical val of autocorrelatino of stat sig rk's
## h
acfs <- c(
acf(arima.sim(n = 10000, list(ma=-0.3)))$acf[2],
acf(arima.sim(n = 10000, list(ma=-0.7)))$acf[2],
acf(arima.sim(n = 10000, list(ma=-0.9)))$acf[2])
acfs
### Problem 4
## a
par(mfrow=c(1,1))
rooms = scan("http://www.stat.ucla.edu/~jsanchez/rooms.txt")
data.ts = ts(rooms, start=c(1977,1), frequency = 12)
plot.ts(data.ts, type="l", ylab = "data values", main = "this is a time plot of the series")
## b
rooms1 = log(rooms)
data.ts.log = ts(rooms1, start=c(1977,1), frequency = 12)
plot.ts(data.ts, type="l", ylab = "data values", main = "this is another time series")
## c
boxplot(data.ts.log ~ cycle(data.ts.log), main = "seasonal box plot of logged series rooms1", xlab="Months")
## d
rm.decom.additive = decompose(data.ts.log)
plot(rm.decom.additive)
## e
y = rm.decom.additive$random
if (class(y) != "ts") {
y <- ts(y)
}
y[7:162]
y[7:163]
y[6:162]
## f
acf(y[7:162], main = "ACF for logged data y")
pacf(y[7:162], main = "PACF for logged data y")
acf(y[7:162]$acf
l\f
acf(y[7:162])$acf
acf(y[7:162])$acf[c(1,3,4,5,12,13,18)]
acf(y[7:162])$acf[c(2,4,5,6,13,14,19)]
acf(y[7:162])$acf[c(2,4,5,6,13,14,19)]
## f
acf(y[7:162], main = "ACF for logged data y")
pacf(y[7:162], main = "PACF for logged data y")
## g
par(mfrow = c(2,2))
acf(rm.decom.additive, na.action = na.pass, main = "ACF for whole logged time series")
acf(rm.decom.additive$trend, na.action = na.pass, main = "ACF for trend component")
acf(rm.decom.additive$seasonal, na.action = na.pass, main = "ACF for seasonal component")
acf(rm.decom.additive$random, na.action = na.pass, main = "ACF for random component")
acf(rm.decom.additive$x, na.action = na.pass, main = "ACF for whole logged time series")
## g
par(mfrow = c(2,2))
acf(rm.decom.additive$x, na.action = na.pass, main = "ACF for whole logged time series")
acf(rm.decom.additive$trend, na.action = na.pass, main = "ACF for trend component")
acf(rm.decom.additive$seasonal, na.action = na.pass, main = "ACF for seasonal component")
acf(rm.decom.additive$random, na.action = na.pass, main = "ACF for random component")
### HW1 Stats 170 10/9
### Last name: Macias  First name: Konner  uid: 004603916
#########################################################
### Problem 1
## a
par(mfrow=c(3,3)) # to put the next graphs
## b
y = arima.sim(n = 10000, list(ma=-0.3)) # generate MA(1) data
plot.ts(y, main = "MA(1), theta = -0.3") # time plot
acf(y, main = "MA(1), theta = -0.3") # correlogram
pacf(y, main = "MA(1), theta = -0.3") # partial correlogram
y = arima.sim(n = 10000, list(ma=-0.7)) # generate MA(1) data
plot.ts(y, main = "MA(1), theta = -0.7") # time plot
acf(y, main = "MA(1), theta = -0.7") # correlogram
pacf(y, main = "MA(1), theta = -0.7") # partial correlogram
y = arima.sim(n = 10000, list(ma=-0.9)) # generate MA(1) data
plot.ts(y, main = "MA(1), theta = -0.9") # time plot
acf(y, main = "MA(1), theta = -0.9") # correlogram
pacf(y, main = "MA(1), theta = -0.9") # partial correlogram
## g
acf(y)$acf[2] # numerical val of autocorrelatino of stat sig rk's
## h
acfs <- c(
acf(arima.sim(n = 10000, list(ma=-0.3)))$acf[2],
acf(arima.sim(n = 10000, list(ma=-0.7)))$acf[2],
acf(arima.sim(n = 10000, list(ma=-0.9)))$acf[2])
acfs
### Problem 4
## a
par(mfrow=c(1,1))
rooms = scan("http://www.stat.ucla.edu/~jsanchez/rooms.txt")
data.ts = ts(rooms, start=c(1977,1), frequency = 12)
plot.ts(data.ts, type="l", ylab = "data values", main = "this is a time plot of the series")
## b
rooms1 = log(rooms)
data.ts.log = ts(rooms1, start=c(1977,1), frequency = 12)
plot.ts(data.ts, type="l", ylab = "data values", main = "this is another time series")
## c
boxplot(data.ts.log ~ cycle(data.ts.log), main = "seasonal box plot of logged series rooms1", xlab="Months")
## d
rm.decom.additive = decompose(data.ts.log)
plot(rm.decom.additive)
## e
y = rm.decom.additive$random
if (class(y) != "ts") {
y <- ts(y)
}
## f
acf(y[7:162], main = "ACF for logged data y")
pacf(y[7:162], main = "PACF for logged data y")
acf(y[7:162])$acf[c(2,4,5,6,13,14,19)]
## g
par(mfrow = c(2,2))
acf(rm.decom.additive$x, na.action = na.pass, main = "ACF for whole logged time series")
acf(rm.decom.additive$trend, na.action = na.pass, main = "ACF for trend component")
acf(rm.decom.additive$seasonal, na.action = na.pass, main = "ACF for seasonal component")
acf(rm.decom.additive$random, na.action = na.pass, main = "ACF for random component")
### Problem 5
## a
dat.1 <- c(39,35,16,18,7,22,13,18,20,9,-12,-11,-19,-9,-2,16)
dat.2 <- c(47,-26,42,-10,27,-8,16,6,-1,25,11,1,25,7,-5,3)
dat.1.ts <- ts(dat.1)
plot.ts(dat.1.ts, main = 'Time series of Serendipity Data', ylab = 'volumes')
dat.2.ts <- ts(dat.2)
plot.ts(dat.2.ts, main = 'Time series of Cagey Chardonay Data', ylab = 'volumes')
## b
par(mfrow=c(2,1))
acf(dat.1.ts, main = 'ACF of Serendipidity')
acf(dat.2.ts, main = 'ACF of Cagey Chardonay')
### HW1 Stats 170 10/9
### Last name: Macias  First name: Konner  uid: 004603916
#########################################################
### Problem 1
## a
par(mfrow=c(3,3)) # to put the next graphs
## b
y = arima.sim(n = 10000, list(ma=-0.3)) # generate MA(1) data
plot.ts(y, main = "MA(1), theta = -0.3") # time plot
acf(y, main = "MA(1), theta = -0.3") # correlogram
pacf(y, main = "MA(1), theta = -0.3") # partial correlogram
y = arima.sim(n = 10000, list(ma=-0.7)) # generate MA(1) data
plot.ts(y, main = "MA(1), theta = -0.7") # time plot
acf(y, main = "MA(1), theta = -0.7") # correlogram
pacf(y, main = "MA(1), theta = -0.7") # partial correlogram
y = arima.sim(n = 10000, list(ma=-0.9)) # generate MA(1) data
plot.ts(y, main = "MA(1), theta = -0.9") # time plot
acf(y, main = "MA(1), theta = -0.9") # correlogram
pacf(y, main = "MA(1), theta = -0.9") # partial correlogram
## g
acf(y)$acf[2] # numerical val of autocorrelatino of stat sig rk's
## h
acfs <- c(
acf(arima.sim(n = 10000, list(ma=-0.3)))$acf[2],
acf(arima.sim(n = 10000, list(ma=-0.7)))$acf[2],
acf(arima.sim(n = 10000, list(ma=-0.9)))$acf[2])
acfs
### Problem 4
## a
par(mfrow=c(1,1))
rooms = scan("http://www.stat.ucla.edu/~jsanchez/rooms.txt")
data.ts = ts(rooms, start=c(1977,1), frequency = 12)
plot.ts(data.ts, type="l", ylab = "data values", main = "this is a time plot of the series")
## b
rooms1 = log(rooms)
data.ts.log = ts(rooms1, start=c(1977,1), frequency = 12)
plot.ts(data.ts, type="l", ylab = "data values", main = "this is another time series")
## c
boxplot(data.ts.log ~ cycle(data.ts.log), main = "seasonal box plot of logged series rooms1", xlab="Months")
## d
rm.decom.additive = decompose(data.ts.log)
plot(rm.decom.additive)
## e
y = rm.decom.additive$random
if (class(y) != "ts") {
y <- ts(y)
}
## f
acf(y[7:162], main = "ACF for logged data y")
pacf(y[7:162], main = "PACF for logged data y")
acf(y[7:162])$acf[c(2,4,5,6,13,14,19)]
## g
par(mfrow = c(2,2))
acf(rm.decom.additive$x, na.action = na.pass, main = "ACF for whole logged time series")
acf(rm.decom.additive$trend, na.action = na.pass, main = "ACF for trend component")
acf(rm.decom.additive$seasonal, na.action = na.pass, main = "ACF for seasonal component")
acf(rm.decom.additive$random, na.action = na.pass, main = "ACF for random component")
### Problem 5
## a
dat.1 <- c(39,35,16,18,7,22,13,18,20,9,-12,-11,-19,-9,-2,16)
dat.2 <- c(47,-26,42,-10,27,-8,16,6,-1,25,11,1,25,7,-5,3)
dat.1.ts <- ts(dat.1)
plot.ts(dat.1.ts, main = 'Time series of Serendipity Data', ylab = 'volumes')
dat.2.ts <- ts(dat.2)
plot.ts(dat.2.ts, main = 'Time series of Cagey Chardonay Data', ylab = 'volumes')
## b
par(mfrow=c(2,1))
acf(dat.1.ts, main = 'ACF of Serendipidity')
acf(dat.2.ts, main = 'ACF of Cagey Chardonay')
acf(arima.sim(n = 10000, list(ma=-0.3)))$acf[2]
par(mfrow=c(3,3)) # to put the next graphs
## b
y.1 = arima.sim(n = 10000, list(ma=-0.3)) # generate MA(1) data
plot.ts(y.1, main = "MA(1), theta = -0.3") # time plot
acf(y.1, main = "MA(1), theta = -0.3") # correlogram
pacf(y.1, main = "MA(1), theta = -0.3") # partial correlogram
y.2 = arima.sim(n = 10000, list(ma=-0.7)) # generate MA(1) data
plot.ts(y.2, main = "MA(1), theta = -0.7") # time plot
acf(y.2, main = "MA(1), theta = -0.7") # correlogram
pacf(y.2, main = "MA(1), theta = -0.7") # partial correlogram
y.3 = arima.sim(n = 10000, list(ma=-0.9)) # generate MA(1) data
plot.ts(y.3, main = "MA(1), theta = -0.9") # time plot
acf(y.3, main = "MA(1), theta = -0.9") # correlogram
pacf(y.3, main = "MA(1), theta = -0.9") # partial correlogram
## g
acf(y.1)$acf[2]
acf(y.2)$acf[2]
acf(y.3)$acf[2] # numerical val of autocorrelation of stat sig rk's
par(mfrow=c(3,3)) # to put the next graphs
## b
y.1 = arima.sim(n = 10000, list(ma=-0.3)) # generate MA(1) data
plot.ts(y.1, main = "MA(1), theta = -0.3") # time plot
acf(y.1, main = "MA(1), theta = -0.3") # correlogram
pacf(y.1, main = "MA(1), theta = -0.3") # partial correlogram
y.2 = arima.sim(n = 10000, list(ma=-0.7)) # generate MA(1) data
plot.ts(y.2, main = "MA(1), theta = -0.7") # time plot
acf(y.2, main = "MA(1), theta = -0.7") # correlogram
pacf(y.2, main = "MA(1), theta = -0.7") # partial correlogram
y.3 = arima.sim(n = 10000, list(ma=-0.9)) # generate MA(1) data
plot.ts(y.3, main = "MA(1), theta = -0.9") # time plot
acf(y.3, main = "MA(1), theta = -0.9") # correlogram
pacf(y.3, main = "MA(1), theta = -0.9") # partial correlogram
## g
par(mfrow=c(1,1))
acfs <- c(
acf(y.1)$acf[2],
acf(y.2)$acf[2],
acf(y.3)$acf[2]
)
acfs
## h
acfs
par(mfrow=c(3,3)) # to put the next graphs
## b
y.1 = arima.sim(n = 10000, list(ma=-0.3)) # generate MA(1) data
plot.ts(y.1, main = "MA(1), theta = -0.3") # time plot
acf(y.1, main = "MA(1), theta = -0.3") # correlogram
pacf(y.1, main = "MA(1), theta = -0.3") # partial correlogram
y.2 = arima.sim(n = 10000, list(ma=-0.7)) # generate MA(1) data
plot.ts(y.2, main = "MA(1), theta = -0.7") # time plot
acf(y.2, main = "MA(1), theta = -0.7") # correlogram
pacf(y.2, main = "MA(1), theta = -0.7") # partial correlogram
y.3 = arima.sim(n = 10000, list(ma=-0.9)) # generate MA(1) data
plot.ts(y.3, main = "MA(1), theta = -0.9") # time plot
acf(y.3, main = "MA(1), theta = -0.9") # correlogram
pacf(y.3, main = "MA(1), theta = -0.9") # partial correlogram
## g
par(mfrow=c(1,1))
acfs <- c(
acf(y.1)$acf[2],
acf(y.2)$acf[2],
acf(y.3)$acf[2]
)
acfs
## h
acfs
### Problem 4
## a
par(mfrow=c(1,1))
rooms = scan("http://www.stat.ucla.edu/~jsanchez/rooms.txt")
data.ts = ts(rooms, start=c(1977,1), frequency = 12)
plot.ts(data.ts, type="l", ylab = "data values", main = "this is a time plot of the series")
## b
rooms1 = log(rooms)
data.ts.log = ts(rooms1, start=c(1977,1), frequency = 12)
plot.ts(data.ts, type="l", ylab = "data values", main = "this is another time series")
## c
boxplot(data.ts.log ~ cycle(data.ts.log), main = "seasonal box plot of logged series rooms1", xlab="Months")
## d
rm.decom.additive = decompose(data.ts.log)
plot(rm.decom.additive)
## e
y = rm.decom.additive$random
if (class(y) != "ts") {
y <- ts(y)
}
## f
acf(y[7:162], main = "ACF for logged data y")
pacf(y[7:162], main = "PACF for logged data y")
acf(y[7:162])$acf[c(2,4,5,6,13,14,19)]
## g
par(mfrow = c(2,2))
acf(rm.decom.additive$x, na.action = na.pass, main = "ACF for whole logged time series")
acf(rm.decom.additive$trend, na.action = na.pass, main = "ACF for trend component")
acf(rm.decom.additive$seasonal, na.action = na.pass, main = "ACF for seasonal component")
acf(rm.decom.additive$random, na.action = na.pass, main = "ACF for random component")
### Problem 5
## a
dat.1 <- c(39,35,16,18,7,22,13,18,20,9,-12,-11,-19,-9,-2,16)
dat.2 <- c(47,-26,42,-10,27,-8,16,6,-1,25,11,1,25,7,-5,3)
dat.1.ts <- ts(dat.1)
plot.ts(dat.1.ts, main = 'Time series of Serendipity Data', ylab = 'volumes')
dat.2.ts <- ts(dat.2)
plot.ts(dat.2.ts, main = 'Time series of Cagey Chardonay Data', ylab = 'volumes')
## b
par(mfrow=c(2,1))
acf(dat.1.ts, main = 'ACF of Serendipidity')
acf(dat.2.ts, main = 'ACF of Cagey Chardonay')
par(mfrow=c(3,3)) # to put the next graphs
## b
y.1 = arima.sim(n = 10000, list(ma=-0.3)) # generate MA(1) data
plot.ts(y.1, main = "MA(1), theta = -0.3") # time plot
acf(y.1, main = "MA(1), theta = -0.3") # correlogram
pacf(y.1, main = "MA(1), theta = -0.3") # partial correlogram
y.2 = arima.sim(n = 10000, list(ma=-0.7)) # generate MA(1) data
plot.ts(y.2, main = "MA(1), theta = -0.7") # time plot
acf(y.2, main = "MA(1), theta = -0.7") # correlogram
pacf(y.2, main = "MA(1), theta = -0.7") # partial correlogram
y.3 = arima.sim(n = 10000, list(ma=-0.9)) # generate MA(1) data
plot.ts(y.3, main = "MA(1), theta = -0.9") # time plot
acf(y.3, main = "MA(1), theta = -0.9") # correlogram
pacf(y.3, main = "MA(1), theta = -0.9") # partial correlogram
## g
par(mfrow=c(1,1))
acfs <- c(
acf(y.1)$acf[2],
acf(y.2)$acf[2],
acf(y.3)$acf[2]
)
acfs
## h
acfs
### Problem 4
## a
par(mfrow=c(1,1))
rooms = scan("http://www.stat.ucla.edu/~jsanchez/rooms.txt")
data.ts = ts(rooms, start=c(1977,1), frequency = 12)
plot.ts(data.ts, type="l", ylab = "data values", main = "this is a time plot of the series")
## b
rooms1 = log(rooms)
data.ts.log = ts(rooms1, start=c(1977,1), frequency = 12)
plot.ts(data.ts, type="l", ylab = "data values", main = "this is another time series")
## c
boxplot(data.ts.log ~ cycle(data.ts.log), main = "seasonal box plot of logged series rooms1", xlab="Months")
## d
rm.decom.additive = decompose(data.ts.log)
plot(rm.decom.additive)
## e
y = rm.decom.additive$random
if (class(y) != "ts") {
y <- ts(y)
}
## f
acf(y[7:162], main = "ACF for logged data y")
pacf(y[7:162], main = "PACF for logged data y")
acf(y[7:162])$acf[c(2,4,5,6,13,14,19)]
## g
par(mfrow = c(2,2))
acf(rm.decom.additive$x, na.action = na.pass, main = "ACF for whole logged time series")
acf(rm.decom.additive$trend, na.action = na.pass, main = "ACF for trend component")
acf(rm.decom.additive$seasonal, na.action = na.pass, main = "ACF for seasonal component")
acf(rm.decom.additive$random, na.action = na.pass, main = "ACF for random component")
### Problem 5
## a
dat.1 <- c(39,35,16,18,7,22,13,18,20,9,-12,-11,-19,-9,-2,16)
dat.2 <- c(47,-26,42,-10,27,-8,16,6,-1,25,11,1,25,7,-5,3)
dat.1.ts <- ts(dat.1)
plot.ts(dat.1.ts, main = 'Time series of Serendipity Data', ylab = 'volumes')
dat.2.ts <- ts(dat.2)
plot.ts(dat.2.ts, main = 'Time series of Cagey Chardonay Data', ylab = 'volumes')
## b
par(mfrow=c(2,1))
acf(dat.1.ts, main = 'ACF of Serendipidity')
acf(dat.2.ts, main = 'ACF of Cagey Chardonay')
### Problem 1
set.seed(12345)
## a
par(mfrow=c(3,3)) # to put the next graphs
## b
y.1 = arima.sim(n = 10000, list(ma=-0.3)) # generate MA(1) data
plot.ts(y.1, main = "MA(1), theta = -0.3") # time plot
acf(y.1, main = "MA(1), theta = -0.3") # correlogram
pacf(y.1, main = "MA(1), theta = -0.3") # partial correlogram
y.2 = arima.sim(n = 10000, list(ma=-0.7)) # generate MA(1) data
plot.ts(y.2, main = "MA(1), theta = -0.7") # time plot
acf(y.2, main = "MA(1), theta = -0.7") # correlogram
pacf(y.2, main = "MA(1), theta = -0.7") # partial correlogram
y.3 = arima.sim(n = 10000, list(ma=-0.9)) # generate MA(1) data
plot.ts(y.3, main = "MA(1), theta = -0.9") # time plot
acf(y.3, main = "MA(1), theta = -0.9") # correlogram
pacf(y.3, main = "MA(1), theta = -0.9") # partial correlogram
## g
par(mfrow=c(1,1))
acfs <- c(
acf(y.1)$acf[2],
acf(y.2)$acf[2],
acf(y.3)$acf[2]
)
acfs
## h
acfs
### Problem 4
## a
par(mfrow=c(1,1))
rooms = scan("http://www.stat.ucla.edu/~jsanchez/rooms.txt")
data.ts = ts(rooms, start=c(1977,1), frequency = 12)
plot.ts(data.ts, type="l", ylab = "data values", main = "this is a time plot of the series")
## b
rooms1 = log(rooms)
data.ts.log = ts(rooms1, start=c(1977,1), frequency = 12)
plot.ts(data.ts, type="l", ylab = "data values", main = "this is another time series")
## c
boxplot(data.ts.log ~ cycle(data.ts.log), main = "seasonal box plot of logged series rooms1", xlab="Months")
## d
rm.decom.additive = decompose(data.ts.log)
plot(rm.decom.additive)
## e
y = rm.decom.additive$random
if (class(y) != "ts") {
y <- ts(y)
}
## f
acf(y[7:162], main = "ACF for logged data y")
pacf(y[7:162], main = "PACF for logged data y")
acf(y[7:162])$acf[c(2,4,5,6,13,14,19)]
## g
par(mfrow = c(2,2))
acf(rm.decom.additive$x, na.action = na.pass, main = "ACF for whole logged time series")
acf(rm.decom.additive$trend, na.action = na.pass, main = "ACF for trend component")
acf(rm.decom.additive$seasonal, na.action = na.pass, main = "ACF for seasonal component")
acf(rm.decom.additive$random, na.action = na.pass, main = "ACF for random component")
### Problem 5
## a
dat.1 <- c(39,35,16,18,7,22,13,18,20,9,-12,-11,-19,-9,-2,16)
dat.2 <- c(47,-26,42,-10,27,-8,16,6,-1,25,11,1,25,7,-5,3)
dat.1.ts <- ts(dat.1)
plot.ts(dat.1.ts, main = 'Time series of Serendipity Data', ylab = 'volumes')
dat.2.ts <- ts(dat.2)
plot.ts(dat.2.ts, main = 'Time series of Cagey Chardonay Data', ylab = 'volumes')
## b
par(mfrow=c(2,1))
acf(dat.1.ts, main = 'ACF of Serendipidity')
acf(dat.2.ts, main = 'ACF of Cagey Chardonay')
